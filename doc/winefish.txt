<HTML>
<!--
$Id: winefish.txt 620 2006-05-24 03:35:02Z kyanh $
Winefish Documentation
Format: KTML
Convert: k2h winefish.txt > winefish.html
This is a generated file. !! DO NOT EDIT !!
-->
<HEAD>
<TITLE>Winefish Documentation</TITLE>
<META http-equiv="Content-Type" content="text/html; charset=utf-8">
<META name="Keywords" content="tex,latex,vietnam,winefish,editor,kyanh">
<META name="Copyright" content="Copyright \(c\) 2005-2006 kyanh">
<STYLE>
<!--
body {
	margin: 30px;
	line-height: 150\%;
}
b {
	font-weight: normal;
	font-family: monospace;
	border: 1px solid grey;
	padding: 2px;
	padding-left: 3px;
	padding-right: 3px;
}
pre {
	border: 1px solid grey;
	padding: 10px;
}
/*
a, a:visited, a:hover { text-decoration: none; }
a:hover { color: yellow; background-color: black; }
a:visited { color: green; }
*/
h1 {
	background-color: #E6E6BB;
	padding: 20px;
}
h2 {
	background-color: #DEE7EC;
	padding: 4px;
}
h1:hover, h2:hover {
	/*background-color: violet;*/
}
hr {
	height: 10px;
}
.svnid {
	border: 1px solid grey;
	padding: 4px;
	text-align: center;
}
pre:hover {
	/*background-color: grey;*/
}
-->
</STYLE>
</HEAD>
<BODY>
1(@[Winefish 1.4.0.1 Documentation](http://winefish.berlios.de/))

2(#(READE ME!))

L(
* RED(If you had been using an older version of Winefish,
you should read @[NEWS](#NEWS) and @[IMPORTANT NOTES](#IMPORTANT NOTES)).
The title of this document means that you cannot use it for
an older verion of winefish.
* For further help, visit @(http://winefish.berlios.de/forum/).
There's also the list for users: @(mailto:winefish-users@lists.berlios.de).
* I'm sorry about my English ;\)
If you find any mistakes in this document feel free to let me know!
)

2(#(CONTENTS))

<table>
<tbody>
<tr valign="top">
<td>
L(
* @[THANKS](#THANKS)
* @[NEWS](#NEWS)
* @[news-1.3.2](#NEWS-1.3.2)
* @[features](#FEATURES)
* @[installation](#INSTALLATION)
* @[important notes](#IMPORTANT NOTES)
* @[input method](#INPUT METHOD)
* Hotkeys: @[editing](#HOTKEYS: EDITING)
* Hotkeys: @[compiling](#HOTKEYS: COMPILING)
* @[project mode](#PROJECT MODE)
* @[document structure](#DOCUMENT STRUCTURE)
)
</td>
<td>
L(
* @[keymap file](#KEYMAP FILE) \(new\)
* @[function list](#FUNCTION LIST) \(new\)
* @[autotext](#AUTOTEXT)
* @[auto completion](#AUTO_COMPLETION)
* @[commandline options](#COMMANDLINE OPTIONS)
* @[outputbox](#OUTPUTBOX)
* @[templates support](#TEMPLATES SUPPORT)
* @[brace finder](#BRACE FINDER)
* @[TIPS](#TIPS)
* @[locale support](#LOCALE SUPPORT)
* @[column marker](#COLUMN MARKER)
* @[about](#ABOUT)
)
</td>
</tr>
</tbody>
</table>

2(#(THANKS))

Special THANKS to @[Mich√®le Garoche](michele.garoche/at/easyconnect/dot/fr)
for correcting some typo errors in previous version of this document.

2(#(FEATURES))

L(
* @[autotext](#AUTOTEXT)
* @[autocompletion](#AUTO_COMPLETION)
* @[command collector](#AUTO_COMPLETION)
* multiple encoding
* configurable external tools
* configurable highlight support
* @[templates support](#TEMPLATES SUPPORT)
* @[brace finder](#BRACE FINDER)
* and some stupid things...
)

2(#(INSTALLATION))

Read INSTALL for details.

There are supports/packages for
	Debian, Slackware, Gentoo, Ubuntu, Fedora Core, etc.
Visit @[winefish's homepage](http://winefish.berlios.de/) for details.

2(#(INPUT METHOD))

Right click on the document. In the context menu,
goto B(Input Methods) and choose your favorite
input method. These various methods are selected from your
system, not provided by Winefish.

2(#(NEWS))
Some new features:
L(
* @[Emacs key style support](#KEYMAP FILE)
* multiple outputbox
)

2(#(NEWS-1.3.2))

Some new features:
L(
* delete directly any command from PopUp menu. See @[AUTO_COMPLETION](#AUTO_COMPLETION)
* outputbox with two useful operations:
B(single-click) and B(control + single-click). See @[OUTPUTBOX](#OUTPUTBOX)
* manage your templates easily with Grep Function. See @[TEMPLATES SUPPORT](#TEMPLATES SUPPORT)
* TeX filter for spell checker
* @[Brace Finder](#BRACE FINDER)
* @[Column Marker](#COLUMN MARKER)
* new syntax hilighting
)
any many more. See B(NEWS) and B(CHANGES) for details.

2(#(IMPORTANT NOTES))

Winefish now uses B($HOME/.winefish/rcfile) to save configuration.
Move the old one B($HOME/.winefish/rcfile_v2) to B($HOME/.winefish/rcfile)
manually, then reconfigure Winefish (\(use B(Preferences Pages).\)
Please take care of following properties:
L(
* Editor,  B(Highlighting Syntax by Default)
* Files,  B(Create Backup On Save)
* Users Interface, \*
* TeXbox, B(Save, Show)
* Miscellaneous, B(Templates Directory)
)

If you do not move B($HOME/.winefish/rcfile_v2) to B($HOME/.winefish/rcfile),
winefish will start with default settings and of course ignore your old ones.

There is also new color scheme for hilighting. Backup then remove your
B($HOME/.winefish/highlighting) to enjoy the new one.

2(#(HOTKEYS: EDITING))

L(
* Start "autocompletion": B(control + Space)
* Start "autotext": B(shift + Space)
* Update syntax highlighting: B(mod1 + Space)
* Go to a line: B(control + /)
* Start a numbered section: B(control + {0,1,2,3,4,5,6})
* Start an unnumbered section: B(control + mod1 + {0,1,2,3,4})
* Insert an image: B(control + I)
* Insert a table or array: B(control + T)
* Insert a list: B(control + L)
* Insert `verbatim': B(shift + control + V), B(shift + control + mod1 + V)
* \(Un\)comment selected text: B(control + \%), B(control + mod1 + \%)
* Increase/Decrease Indent: B(control + ,) / B(control + .)
* Insert source separator: B(control + =)
* Delete the first char of each line in the selected text: B(control + <)
* Delete current line: B(control + K)
* Templates manager: B(control + mod1 + shift + F)
* Advanced Find in Files: B(control + mod1 + F)
* Brace Finder: B(control + ]), B(control + [)
)

2(#(HOTKEYS: COMPILING))

By default, Winefish requires LaTeX, xdvi and xpdf.
You may change these from B(Preferences Page).
L(
* Convert to DVI format: B(F1)
* View DVI document \(with DVI SYNC\): B(control + F1)
* Convert to PDF: B(F2)
* View PDF document: B(control + F2)
* Stop running tools: B(Escape)
)

If you are working in project mode, by default, the above tools
will start in the base directory and file of the project.

If you want to compile the current document, B(NOT) the
base document of the project, you may use B(control + ESC)
to turn project mode ON/OFF, *OR* select menu B(External/Project Mode)

2(#(PROJECT MODE))

A project is a group of files. This happens when
you are typeting a thesis whose main file is `foobar.tex'
and whose children are `chaper1.tex', `chapter2.tex', etc.

L(
* Each project requires a U(GREEN((base directory)) and a U(GREEN((base file))
* The "base file" RED(must be located) in "base directory"
* Project's files should be located in "base directory"
or its sub-directories
)

2(#(DOCUMENT STRUCTURE))

In order to get the document structure, you may try this:
L(
* Press B(control + F) to start the search engine
* Type B(exactly) the following string:
PRE(^\BACKSLASH\BACKSLASH\(sub\){0,2}section.\*?$)
* Select B(PERL type) as type \(regular expression\)
* Select B(Bookmark Results)
* Press OK.
)

2(#(AUTOTEXT))

If B($HOME/.winefish/autotext) has not been modified,
you may try to open a new document, type the string
B(/tsta) then press B(shift + Space). Other tests are B(/tstd),
B(/tstc) and B(/tstd).

You may modify the file B($HOME/.winefish/autotext).
RED(You should not try to modify it directly), as Winefish will override it when existing.
But you could modify it from the B(Preferences Page, Automation panel).
As long as you click on Apply after editing it, the changes will survive exiting.
The contents are similar to
PRE(
att: /tsta:\BACKSLASH\BACKSLASHbegin{foo\n:\n\BACKSLASH\end{foo:
att: /tstb:\BACKSLASH\BACKSLASHbegin{this-is-b\n:\n\BACKSLASH\end{this-is-b:
att: /tstc:\BACKSLASH\BACKSLASHtestofsomething::
att: /tstd:: Can you see?:
)
Each line is of the form: PRE(att: /foo:begin:end:)
where B(/foo) is the new definition which B(must be started) by a slash B(/).
The string begin will be inserted before the cursor,
the string end will be inserted after the cursor.

Here are some rules:
L(
* Length of /foo should be at most AUTOTEXT_MAX_LENGTH
\(defined in B(src/config_spec.h)\)
* one of the two strings `begin' and `end' should not be NULL.
* If foo is defined twice or more, for e.g.,
* only the first one is used.
* RED(U(some special characters must be escaped:))
L(
	* B(\n) for the new line
	* B(\t) for a tab
	* B(\:) for a colon
	* B(\BACKSLASH\BACKSLASH) for the backslash
)
)

2(#(AUTO_COMPLETION))

Press B(control + Space) to start autocompletion.
You may delete a word from popup menu (press B(Delete)),
or from B(Preferences) page.

The words are saved in B($HOME/.winefish/words).
RED(You should not try to modify it directly), as Winefish will override it when existing.
But you could modify it from the B(Preferences Page, Automation panel).
As long as you click on Apply after editing it, the changes will survive exiting.

When you're typing, Winefish collects LaTeX commands and add them to
list of known words. If there's a bad command, you may `B(delete)'
it directly from PopUp menu.

A command will be added to completion list if its length is:
L(
* greater than 2
*less than or equal COMMAND_MAX_LENGTH \(defined in B(src/config_spec.h)\)
)
You may add commands by using B(Preferences Pages, AutoX) but this is U(not recommended)
as Winefish collects commands automatically and B(Preferences Pages, AutoX) will be
dropped some day.\)

2(#(COMMANDLINE OPTIONS))

PRE(
$ winefish -h
winefish 1.3.2.6 LaTeX editor
Usage: winefish B(options) B(filenames ...)
Currently accepted options are:
-s           skip root check
-v           current version
-n 0|1       open new window \(1\) or not \(0\)
-p filename  open project
-l B(number)    set line B(number). Negative value takes no effect.
-h           this help screen
)

2(#(OUTPUTBOX))

When you start a tool, `grep function' \(B(control + mod1 + F)\),
or listing your templates \(B(control + mod1 + shift + F)\),
the results are shipped out to a Outputbox.

The results of executing may be filtered so that only useful messages
will be appeared. Each line of outputbox is often of the form
PRE(RED(foobar.tex) BLUE(12) bla bla bla bla...)
What does this mean? The message `bla bla bla....' deals with
the file named `foobar.tex' at the line numbered 12. Sometimes
there's only line number \(12\) but the filename. In this case,
the current file is taken.

There are some useful operations for each line of outputbox:
L(
* GREEN(single-click:) open file at specified line
* GREEN(right-click:) create a popup menu
* GREEN(control + click:) clone file \(create a new file with the same contents\)
)

You may press B(shift + Escape) to hide/show the Outputbox.


2(#(TEMPLATES SUPPORT))

Go to B(Preferences Pages, Miscellaneous) and specify the directory
which contains your templates. It is B($HOME/tex/templates) by default.

The template file is of type B(*.tex) or B(*.sty).
Each template *MUST* contain the  pattern B(\%\%wf=)
which helps you writing description. For e.g.,
PRE(
\%\%wf=this is a template file
\%\%wf=this is the template's description
\documentclass{article}
...
)
To U(list all your template files), press B(control + mod1 + shift + F).
You may also use the menu B(Edit, Find, Replace, Templates).
Then press B(control + click) to create a clone file \(See @[OUTPUTBOX](#OUTPUTBOX)\)

Winefish does not clean up the string B(\%\%wf=) automatically.

2(#(BRACE FINDER))

If your editor cursor is placed beside a GREEN(brace)
\( B(RED($)), B(RED(\()), B(RED(\))), B(RED({)), B(RED(})), B(RED([)), B(RED(])) \),
you may want to find the matching one. Just press
B(control + ]) \(forward\) or B(control + [) \(backward\). Here are the rules:

L(
* escaped characters will be ignored
* characters in comment line will be ignored
* for $, B(control + ]) starts I(forward)-finding the matched $.
* for $, B(control + [) starts I(backward)-finding the matched $.
* for other braces:
L(
* I(forward): starts finding the matching for current brace.
* I(backward): L(*if the characters on the left hand is a brace too,
start finding the matching for it; *otherwise, treat as I(forward).)
)
* for other characters:
L(
* I(forward): start finding }
* I(backward): start finding {
)
)

The brace finder also GREEN(U(starts its job automatically)) when you're editing:
the matched brace(s) will be highlighted. For performance reason, the finder
will search in a limited area. The maximum number of lines of this area
is defined via BRACE_FINDER_MAX_LINES \(B(src/config_spec.h)\).

RED(U(NOTE:)) when a key is pressed and is not released yet, the color of
matching brace(s) is dropped. This causes GREEN(FLASH) effect.
This is an unwanted-effect which takes place naturally after fixing the BUG#87.
I \(kyanh\) found this is quite nice stuff. Please give comment
via forum \(@(http://winefish.berlios.de/forum/)\).

2(#(LOCALE SUPPORT))

There are English, French, Italian and Vietnamese translations. For e.g.,
PRE(
$ LANG=vi_VN winefish # start winefish with Vietnamese frontend
$ LANG=it_IT winefish # for Italian users
$ LANG=fr_FR winefish # for French users
)

2(#(TIPS))

L(
* Press B(shift + control + Escape) to hide/show the Sidebar.
* Press B(shift + Escape) to hide/show the Outputbox.
* Press B(control + I) to insert an image.
* B(Doubleclick) on an image in the file browser.
* Long line should be splitted into shorter ones.
This mean that you should not use the WRAP option.
Let's WRAP the text by yourself!
GRAY(\(I have a file with a very long line.
I tried to open it in Emacs, KDE applications, Bluefish and Winefish. Only the \*fishes
make me annoyed! The cursor moved very very slowly when it was inside that line.
\(I do not know whether this problem occurs with other GTK applicatons\)\))
* To open a file in existing running Winefish at specific line, try for e.g.
PRE(winefish -n0 -l 12 foobar.tex blablabla.tex)
If you specify multiple files, all are opened at the same line numbered <num> :\)
% * Read PRE(
% ~/.winefish/words
% ~/.winefish/words_s
% ~/.winefish/autotext)	
% You may get some good idea. Modify it as you want!
% Do not worry about duplicate entries. Winefish know this!
% See @[AUTO_COMPLETION](#AUTO_COMPLETION) and @[AUTOTEXT](#AUTOTEXT) for NOTES.
))

2(#(COLUMN MARKER))

Column marker is a vertical line which is positioned at a specific line number.
This marker helps you find easily the document's blocks. The feature is inspired
from @[EditPlus](http://www.editplus.com/) but it seems to make people annoyed.
So the feature is disabled by default. You can turn it on via the option 
B(--enable-column-marker) when running B(configure) script.

There are 3 markers as you can see in B(Preferences Page, Miscellaneous) panel.
The zero value is equivalent to B(disabled).

2(#(FUNCTION LIST))

B(_comment) B(_uncomment)

B(_indent) B(_unindent)

B(_complete)\\
popup the list of latex command which is prefixed by current

B(_complete_eat)\\
add current command to sessin word list \(use for autocompletion\).
If there isn't selection, the command is taken from current cursor
backward to the first backslash. If you're selecting some text
which is prefixed by a backslash, the selection will be taken.

B(_delete_line)
B(_delete_line_left) B(_delete_line_right)
\\delete the whole line;
delete to line's start or to line's end

B(_select_line)
B(_select_word)
B(_select_all)
\\
B(_select_line_left) B(_select_line_right)

B(_move_line_up) B(_move_line_down)\\
B(_move_line_start) B(_move_line_end)\\
move up, down \(try to keep column number unchanged\);
move to line's start or line's end

B(_page_up) B(_page_down)\\
not implemented yet

B(_move_char_left) B(_move_char_right)\\
B(_move_word_start) B(_move_word_end)\\
B(_move_sentence_start) B(_move_sentence_end)
\\
not implemented yet

B(_hilight_off) B(_hilight_on)
\\
not implemented yet

B(_grep) B(_template_list)\\
start grep function \(find in files\); list your templates

B(_new)
B(_open)
\\
not implemented yet

B(_about) B(_help)
\\
not implemented yet

B(_keymap)
\\
not implemented yet.
show the contents of B($HOME/.winefish/keymap)

B(_zoom_in) B(_zoom_out)\\
increase/decrease the font size of the editor;
the result will be saved automatically.

2(#(KEYMAP FILE))

The B(keymap) file located in B($HOME/.winefish/) defines
the key shortcuts for editor functions. There is a sample
file which located in the B(src/) directory in the tar ball.
The contents of B(keymap) are very simimilar to
PRE(
map: _comment:<c>\%:
map: _uncomment:<cm>\%:
map: _complete:<c> :
map: _complete:<cs> :
map: _complete_eat:BLUE(\<c\>9)GREEN(\<c\>9):
map: _complete_eat:BLUE(\<c\>9)GREEN(9):
map: _foobar:<c>S:
map: _foobar:<c>s:
map: _foobar:<c>\::
)
Each valuable line is of form
PRE(map: OLIVE(foobar):BLUE(group1)GREEN(group2):)
where OLIVE(foobar) is an editor function taken from
@[FUNCTION LIST](#FUNCTION LIST), BLUE(group1) and GREEN(group2)
are key sequences. The lines which donot sastify that form
will be ignored -- this help you writing description in 
B(KEYMAP).

The BLUE(group1) is of the format
PRE(
<BLUE(c)NAVY([s])BROWN([m])>\<key\>
<BROWN([c])NAVY([s])BLUE(m)>\<key\>
)
where B(c) stands for B(\<control\>),
B(s) for B(\<shift\>) and B(m) for B(\<mod1\>) or B(\<alt\>).
The order is important:
B(m) must follow B(s) and B(s) must follow B(c).

RED(Stuff put in [] is optional part)
-- this mean that it may be ommitted. 
So in BLUE(group1), the \<shift\> is U(optional)
while there must be at least \<control\> or \<mod1\>.

The GREEN(group2) is of the format
PRE([<BLUE([c])NAVY([s])BROWN([m])>][\<key\>])
Here the \<control\>, \<shift\>, \<mod1\>
and \<key\> may be omitted. If you donot use \<control\>
nor \<shift\> nor \<mod1\>, please drop also the string B(\<\>).

For both groups \<key\> is any \(single\) readable character.
If you want a colon B(:) you must escape it -- use B(\:).

RED(TRICK:)
You may use various shortcuts for the same function.
If some functions are mapped to the same shortcut only
the last one will be used.

RED(NOTE:)
Please take care of using \<shift\>. This modified key is often
used to print `another' character or the `lowercase/upsercase' version
of a \<key\>. When CAPS LOCK is off on an US keyboard, pressing
B(BROWN(\<shift\>s)) will print B(S) on the screen while pressing
B(BROWN(\<shift\>4)) will print B($).
So \<key\> is what you get on the screen, not what you type.
For the mapping
PRE(map: _foobar:<c>S:)
on US keyboard, when CAPS LOCK is off you must type
B(BROWN(\<control\>\<shift\>s))
but when CAPS LOCK is on you just type
B(BROWN(\<control\>s))
to active the function B(_foobar).

2(#(ABOUT))

I am a vietnamese who loves maths, music and of course winefish ;\)

Please write my name with lowercase characters -- B(kyanh) -- as it is
my \nix name... and it's hard to write the vietnamese one ;\(

I love Emacs but I almost cannot use it. Since winefish 1.4.0.1
the Emacs key style is support... I thought I should be back
to Emacs and left winefish unmaintained ;\)

This HTML file was generated from B(winefish.txt) by B(k2h) program.
I may say B(I love \TeX) but I wrote this document in KTML format ;\)

<BR>
<p class="svnid">GRAY($Id: winefish.txt 620 2006-05-24 03:35:02Z kyanh $)</p>
</BODY>
</HEAD>
